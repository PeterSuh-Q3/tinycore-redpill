name: Issues
on:
  issues:
    types: [opened, reopened]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Init Env
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          sudo timedatectl set-timezone "Asia/Seoul"

      - name: Check Issues
        shell: python
        run: |
          # -*- coding: utf-8 -*-
          import json, subprocess
          def set_output(name, value):
            subprocess.call(["echo '{}={}' >> $GITHUB_ENV".format(name, value)], shell=True)
          issuetitle = ${{ toJSON(github.event.issue.title) }};
          issuebody = ${{ toJSON(github.event.issue.body) }};
          
          iscustom = 'false'
          warinfo = 'false'
          model = ''
          version = ''
          mac1 = ''
          mac2 = ''
          mac3 = ''
          mac4 = ''
          mac5 = ''
          mac6 = ''
          mac7 = ''
          mac8 = ''
          sn = ''
          format = ''
          language = ''
          try:
              if issuetitle.lower().startswith('custom'):
                  jsonbody = json.loads(issuebody)
                  iscustom = 'true'
                  model = jsonbody.get('model', '')
                  version = jsonbody.get('version', '')
                  mac1 = jsonbody.get('mac1', '')
                  mac2 = jsonbody.get('mac2', '')
                  mac3 = jsonbody.get('mac3', '')
                  mac4 = jsonbody.get('mac4', '')
                  mac5 = jsonbody.get('mac5', '')
                  mac6 = jsonbody.get('mac6', '')
                  mac7 = jsonbody.get('mac7', '')
                  mac8 = jsonbody.get('mac8', '')
                  sn = jsonbody.get('sn', '')
                  format = jsonbody.get('format', '')
                  language = jsonbody.get('language', '')
          except ValueError as e:
              pass
          if iscustom == 'false':
              if issuebody.find('DMI') < 0 and issuebody.find('CPU') < 0 and issuebody.find('NIC') < 0:
                  warinfo = 'true'
    
          set_output("iscustom", iscustom)
          set_output("warinfo", warinfo)  

          set_output("model", model)
          set_output("version", version)
          set_output("mac1", mac1)
          set_output("mac2", mac2)
          set_output("mac3", mac3)
          set_output("mac4", mac4)
          set_output("mac5", mac5)
          set_output("mac6", mac6)
          set_output("mac7", mac7)
          set_output("mac8", mac8)
          set_output("sn", sn)
          set_output("format", format)
          set_output("language", language)

      - name: Update Comment Labels
        if: env.iscustom == 'true'
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'add-labels'
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          labels: 'custom,${{ env.model }}'
          
      - name: build tinycore-redpill loader with lastest img
        id: build-loader
        if: env.iscustom == 'true'
        run: |
          path=`pwd`        
          userconfigfile="/home/tc/user_config.json"
          
          sudo apt-get update
          sudo apt-get install grub2 pciutils qemu-utils cpio kmod ncurses-bin jq

          sudo mkdir /home/tc
          sudo mkdir /opt/output
          sudo cp -rf ./* /home/tc
          sudo chmod +x /home/tc/writekey.sh
          ls -ltr /home/tc
          
          LATESTURL="`curl --connect-timeout 5 -skL -w %{url_effective} -o /dev/null "https://github.com/PeterSuh-Q3/tinycore-redpill/releases/latest"`"
          TAG="${LATESTURL##*/}"
          echo "TAG is ${TAG}"
          curl -kLO# https://github.com/PeterSuh-Q3/tinycore-redpill/releases/download/${TAG}/tinycore-redpill.${TAG}.m-shell.img.gz
          gunzip tinycore-redpill.${TAG}.m-shell.img.gz          
          pwd
          ls -ltr
          echo "TAG=${TAG}" >> $GITHUB_OUTPUT

          LOOPX=$(sudo losetup -f)
          sudo losetup -P ${LOOPX} tinycore-redpill.${TAG}.m-shell.img
          sudo fdisk -l ${LOOPX}

          loaderdisk=$(echo ${LOOPX} | cut -c 6-12 )

          sudo mkdir -p /mnt/${loaderdisk}p1
          sudo mkdir -p /mnt/${loaderdisk}p2
          sudo mkdir -p /mnt/${loaderdisk}p3

          sudo mount ${LOOPX}p1 /mnt/${loaderdisk}p1
          sudo mount ${LOOPX}p2 /mnt/${loaderdisk}p2
          sudo mount ${LOOPX}p3 /mnt/${loaderdisk}p3

          ls -ltr /mnt/${loaderdisk}p1
          ls -ltr /mnt/${loaderdisk}p2
          ls -ltr /mnt/${loaderdisk}p3

          cd /home/tc
          if [ -n "${{ env.mac1 }}" ]; then
            echo "set mac1: ${{ env.mac1 }}"
            sudo ./writekey.sh "extra_cmdline" "mac1" "${{ env.mac1 }}" $userconfigfile
            sudo ./writekey.sh "extra_cmdline" "netif_num" "1" $userconfigfile
          fi
          if [ -n "${{ env.mac2 }}" ]; then
            echo "set mac2: ${{ env.mac2 }}"
            sudo ./writekey.sh "extra_cmdline" "mac2" "${{ env.mac2 }}" $userconfigfile
            sudo ./writekey.sh "extra_cmdline" "netif_num" "2" $userconfigfile
          fi          
          if [ -n "${{ env.mac3 }}" ]; then
            echo "set mac3: ${{ env.mac3 }}"
            sudo ./writekey.sh "extra_cmdline" "mac3" "${{ env.mac3 }}" $userconfigfile
            sudo ./writekey.sh "extra_cmdline" "netif_num" "3" $userconfigfile
          fi          
          if [ -n "${{ env.mac4 }}" ]; then
            echo "set mac4: ${{ env.mac4 }}"
            sudo ./writekey.sh "extra_cmdline" "mac4" "${{ env.mac4 }}" $userconfigfile
            sudo ./writekey.sh "extra_cmdline" "netif_num" "4" $userconfigfile
          fi          
          
          if [ -n "${{ env.mac5 }}" ]; then
            echo "set mac5: ${{ env.mac5 }}"
            sudo ./writekey.sh "extra_cmdline" "mac5" "${{ env.mac5 }}" $userconfigfile
            sudo ./writekey.sh "extra_cmdline" "netif_num" "5" $userconfigfile
          fi
          if [ -n "${{ env.mac6 }}" ]; then
            echo "set mac6: ${{ env.mac6 }}"
            sudo ./writekey.sh "extra_cmdline" "mac6" "${{ env.mac6 }}" $userconfigfile
            sudo ./writekey.sh "extra_cmdline" "netif_num" "6" $userconfigfile
          fi          
          if [ -n "${{ env.mac7 }}" ]; then
            echo "set mac7: ${{ env.mac7 }}"
            sudo ./writekey.sh "extra_cmdline" "mac7" "${{ env.mac7 }}" $userconfigfile
            sudo ./writekey.sh "extra_cmdline" "netif_num" "7" $userconfigfile
          fi          
          if [ -n "${{ env.mac8 }}" ]; then
            echo "set mac8: ${{ env.mac8 }}"
            sudo ./writekey.sh "extra_cmdline" "mac8" "${{ env.mac8 }}" $userconfigfile
            sudo ./writekey.sh "extra_cmdline" "netif_num" "8" $userconfigfile
          fi          
          
          if [ -n "${{ env.sn }}" ]; then
            echo "set sn: ${{ env.sn }}"
            sudo ./writekey.sh "extra_cmdline" "sn" "${{ env.sn }}" $userconfigfile
          fi
          if [ -n "${{ env.language }}" ]; then
            echo "set language: ${{ env.language }}"
            sudo ./writekey.sh "general" "ucode" "${{ env.language }}" $userconfigfile
          fi
          if [ -n "${{ env.version }}" ]; then
            echo "set version: ${{ env.version }}"
            sudo ./writekey.sh "general" "version" "${{ env.version }}" $userconfigfile
          fi

          echo "Build loader for ${{ env.model }}-${{ env.version }}"
          ls -ltr ./functions.sh
          sudo ./functions.sh my ${{ env.model }}-${{ env.version }} noconfig fri
          sudo cat /home/tc/user_config.json
          
          ls -ltr /mnt/${loaderdisk}p1
          ls -ltr /mnt/${loaderdisk}p2
          ls -ltr /mnt/${loaderdisk}p3

          #make target img
          cd ${path}/
          dd if=/dev/zero of=tinycore-redpill.${TAG}-${{ env.model }}-${{ env.version }}.m-shell.img bs=1M seek=2048 count=0
          echo -e "n\np\n1\n\n+72M\nn\np\n2\n\n+75M\nn\np\n3\n\n+1899M\nw\nq\n" | sudo fdisk tinycore-redpill.${TAG}-${{ env.model }}-${{ env.version }}.m-shell.img
          echo -e "a\n1\nw" | sudo fdisk tinycore-redpill.${TAG}-${{ env.model }}-${{ env.version }}.m-shell.img

          LOOPZ=$(sudo losetup -f)
          sudo losetup -P ${LOOPZ} tinycore-redpill.${TAG}-${{ env.model }}-${{ env.version }}.m-shell.img
          echo "LOOPZ = ${LOOPZ}"
          sudo fdisk -l ${LOOPZ}

          #sudo mkfs.vfat -F16 ${LOOPZ}p1
          #sudo mkfs.vfat -F16 ${LOOPZ}p2
          sudo mkfs.vfat -i 6234C863 -F16 ${LOOPZ}p3
          
          sudo dd if="${LOOPX}p1" of="${LOOPZ}p1"
          sudo mkdir -p /mnt/tarp1
          sudo mount ${LOOPZ}p1 /mnt/tarp1
          sudo grub-install --target=x86_64-efi --boot-directory="/mnt/tarp1/boot" --efi-directory="/mnt/tarp1" --removable
          sudo grub-install --target=i386-pc --boot-directory="/mnt/tarp1/boot" "${LOOPZ}"
          
          sudo dd if="${LOOPX}p2" of="${LOOPZ}p2"
          
          sudo mkdir -p /mnt/tarp3
          sudo mount ${LOOPZ}p3 /mnt/tarp3
          cd /mnt/${loaderdisk}p3 && sudo find . | sudo cpio -pdm "/mnt/tarp3"
          cd ${path}/
          ls -ltr /mnt/tarp3
         
          sudo umount /mnt/tarp3
          
          sudo losetup -d ${LOOPZ}
          sudo umount /mnt/${loaderdisk}p1
          sudo umount /mnt/${loaderdisk}p2
          sudo umount /mnt/${loaderdisk}p3
          sudo losetup -d ${LOOPX}

          cd ${path}/
          ls -ltr ${path}/
          
          # env.format 값이 지정되지 않은 경우 img와 vmdk 둘 다 생성
          if [ -z "${{ env.format }}" ]; then
            # img 형식 생성
            gzip -c tinycore-redpill.${TAG}-${{ env.model }}-${{ env.version }}.m-shell.img > /opt/output/tinycore-redpill.${TAG}-${{ env.model }}-${{ env.version }}.m-shell.img.gz
          
            # vmdk 형식 생성
            qemu-img convert -f raw -O vmdk tinycore-redpill.${TAG}-${{ env.model }}-${{ env.version }}.m-shell.img tinycore-redpill.${TAG}-${{ env.model }}-${{ env.version }}.m-shell.vmdk
            gzip -c tinycore-redpill.${TAG}-${{ env.model }}-${{ env.version }}.m-shell.vmdk > /opt/output/tinycore-redpill.${TAG}-${{ env.model }}-${{ env.version }}.m-shell.vmdk.gz
          else
            # format 값이 img인 경우
            if [ "${{ env.format }}" = "img" ]; then
              gzip -c tinycore-redpill.${TAG}-${{ env.model }}-${{ env.version }}.m-shell.img > /opt/output/tinycore-redpill.${TAG}-${{ env.model }}-${{ env.version }}.m-shell.img.gz
            fi
          
            # format 값이 vmdk인 경우
            if [ "${{ env.format }}" = "vmdk" ]; then
              qemu-img convert -f raw -O vmdk tinycore-redpill.${TAG}-${{ env.model }}-${{ env.version }}.m-shell.img tinycore-redpill.${TAG}-${{ env.model }}-${{ env.version }}.m-shell.vmdk
              gzip -c tinycore-redpill.${TAG}-${{ env.model }}-${{ env.version }}.m-shell.vmdk > /opt/output/tinycore-redpill.${TAG}-${{ env.model }}-${{ env.version }}.m-shell.vmdk.gz
            fi
          fi

          ls -ltr /opt/output
          
      - name: Upload to Artifact
        if: env.iscustom == 'true' && success()
        uses: actions/upload-artifact@v4
        with:
          name: MshellImage-${{ steps.build-loader.outputs.TAG }}-${{ env.model }}-${{ env.version }}
          path: /opt/output

      - name: Update Comment Success
        if: env.iscustom == 'true' && success()
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'update-comment'
          token: ${{ secrets.GITHUB_TOKEN }}
          comment-id: ${{ steps.comment.outputs.comment-id }}
          update-mode: replace
          body: |
            Hi @${{ github.event.issue.user.login }}.  
            RR-${{ env.model }} build success, please download the attachment from the below link (Attachments are only kept for 5 days).
            > ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}  
            ----
          emoji: hooray

      - name: Close Issues
        if: env.iscustom == 'true' && success()
        uses: actions-cool/issues-helper@v3
        with:
          actions: 'close-issue'
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
